<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
"http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>

	<!-- Constantes pour le plugin Convention -->
	<constant name="struts.convention.result.path" value="/jsp/" />
	<constant name="struts.convention.default.parent.package"
		value="struts" />
	<constant name="struts.convention.action.name.lowercase"
		value="true" />

	<package name="struts" extends="json-default">
		<interceptors>
			<interceptor name="singleAction"
				class="fr.certu.chouette.struts.interceptor.SingleActionInterceptor" />
			<interceptor name="alias"
				class="com.opensymphony.xwork2.interceptor.AliasInterceptor" />
			<interceptor name="chain"
				class="com.opensymphony.xwork2.interceptor.ChainingInterceptor" />
			<interceptor name="conversionError"
				class="org.apache.struts2.interceptor.StrutsConversionErrorInterceptor" />
			<interceptor name="cookie"
				class="org.apache.struts2.interceptor.CookieInterceptor" />

			<interceptor-stack name="defaultCookie">
				<interceptor-ref name="defaultStack" />
				<interceptor-ref name="cookie" />
			</interceptor-stack>

			<interceptor name="clearSession"
				class="org.apache.struts2.interceptor.ClearSessionInterceptor" />
			<interceptor name="createSession"
				class="org.apache.struts2.interceptor.CreateSessionInterceptor" />
			<interceptor name="debugging"
				class="org.apache.struts2.interceptor.debugging.DebuggingInterceptor" />
			<interceptor name="externalRef"
				class="com.opensymphony.xwork2.interceptor.ExternalReferencesInterceptor" />
			<interceptor name="execAndWait"
				class="org.apache.struts2.interceptor.ExecuteAndWaitInterceptor" />
			<interceptor name="exception"
				class="com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor" />
			<interceptor name="fileUpload"
				class="org.apache.struts2.interceptor.FileUploadInterceptor" />
			<interceptor name="i18n"
				class="com.opensymphony.xwork2.interceptor.I18nInterceptor" />
			<interceptor name="logger"
				class="com.opensymphony.xwork2.interceptor.LoggingInterceptor" />
			<interceptor name="modelDriven"
				class="com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor" />
			<interceptor name="scopedModelDriven"
				class="com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor" />
			<interceptor name="params"
				class="com.opensymphony.xwork2.interceptor.ParametersInterceptor" />
			<interceptor name="actionMappingParams"
				class="org.apache.struts2.interceptor.ActionMappingParametersInteceptor" />
			<interceptor name="prepare"
				class="com.opensymphony.xwork2.interceptor.PrepareInterceptor" />
			<interceptor name="staticParams"
				class="com.opensymphony.xwork2.interceptor.StaticParametersInterceptor" />
			<interceptor name="scope"
				class="org.apache.struts2.interceptor.ScopeInterceptor" />
			<interceptor name="servletConfig"
				class="org.apache.struts2.interceptor.ServletConfigInterceptor" />
			<interceptor name="sessionAutowiring"
				class="org.apache.struts2.spring.interceptor.SessionContextAutowiringInterceptor" />
			<interceptor name="timer"
				class="com.opensymphony.xwork2.interceptor.TimerInterceptor" />
			<interceptor name="token"
				class="org.apache.struts2.interceptor.TokenInterceptor" />
			<interceptor name="tokenSession"
				class="org.apache.struts2.interceptor.TokenSessionStoreInterceptor" />
			<interceptor name="validation"
				class="org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor" />
			<interceptor name="workflow"
				class="com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor" />

			<interceptor name="checkbox"
				class="org.apache.struts2.interceptor.CheckboxInterceptor" />
			<interceptor name="profiling"
				class="org.apache.struts2.interceptor.ProfilingActivationInterceptor" />
			<interceptor name="roles"
				class="org.apache.struts2.interceptor.RolesInterceptor" />
			<interceptor name="jsonValidation"
				class="org.apache.struts2.interceptor.validation.JSONValidationInterceptor" />
			<interceptor name="annotationWorkflow"
				class="com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor" />
			<interceptor name="store"
				class="org.apache.struts2.interceptor.MessageStoreInterceptor" />
			<interceptor name="multiselect"
				class="org.apache.struts2.interceptor.MultiselectInterceptor" />

			<interceptor-stack name="crudStack">
				<interceptor-ref name="exception">
					<param name="logEnabled">true</param>
					<param name="logLevel">error</param>
				</interceptor-ref>
				<interceptor-ref name="alias" />
				<interceptor-ref name="servletConfig" />
				<interceptor-ref name="i18n" />
				<!-- <interceptor-ref name="singleAction" /> -->
				<interceptor-ref name="params">
					<param name="excludeParams">dojo\..*,^struts\..*</param>
				</interceptor-ref>
				<interceptor-ref name="prepare" />
				<interceptor-ref name="chain" />
				<interceptor-ref name="debugging" />
				<interceptor-ref name="scopedModelDriven" />
				<interceptor-ref name="modelDriven" />
				<interceptor-ref name="fileUpload" />
				<interceptor-ref name="checkbox" />
				<interceptor-ref name="multiselect" />
				<interceptor-ref name="staticParams" />
				<interceptor-ref name="actionMappingParams" />
				<interceptor-ref name="params">
					<param name="excludeParams">dojo\..*,^struts\..*</param>
				</interceptor-ref>
				<interceptor-ref name="conversionError" />
				<interceptor-ref name="validation">
					<param name="excludeMethods">input,edit,add,delete,list,cancel,
						ajaxBoardingPositions</param>
				</interceptor-ref>
				<interceptor-ref name="store"></interceptor-ref>
				<interceptor-ref name="workflow">
					<param name="excludeMethods">input,edit,add,delete,list,cancel,
						ajaxBoardingPositions</param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>

		<default-interceptor-ref name="crudStack" />

		<!-- Action par défaut -->
		<default-action-ref name="ActionNotFound" />

		<!-- Resultats "reutilisables" -->
		<global-results>
			<result name="busy-session" type="redirect">
				<param name="location">/</param>
				<param name="busySession">true</param>
			</result>
			<result name="error">/jsp/error.jsp</result>
		</global-results>

		<!-- Traitement des erreurs -->
		<global-exception-mappings>
			<exception-mapping result="error" exception="java.lang.Exception" />
		</global-exception-mappings>

		<!-- Déconnexion -->
		<action name="deconnexion" class="Deconnexion" method="execute">
			<result name="success" type="redirect">/</result>
		</action>

		<!-- Action non trouvée -->
		<action name="ActionNotFound">
			<result>/jsp/action_not_found.jsp</result>
		</action>

		<!-- A propos de l'application -->
		<action name="AProposDe" class="AProposDe">
			<result name="success">/jsp/aproposde.jsp</result>
		</action>

		<!-- Validation des données -->
		<action name="Validation_*" class="Validation" method="{1}">
			<interceptor-ref name="crudStack"></interceptor-ref>
			<result name="success">/jsp/validation.jsp</result>
			<result name="input">/jsp/validation.jsp</result>
			<result name="success_itineraire" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">route</param>
				<param name="idLigne">${idLigne}</param>
			</result>
			<result name="input_itineraire" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">route</param>
				<param name="idLigne">${idLigne}</param>
			</result>
			<interceptor-ref name="store">
				<param name="operationMode">STORE</param>
			</interceptor-ref>
		</action>

		<action name="downloadFile" class="DownloadFileAction" method="downloadFile">
			<result name="success" type="stream">
				<param name="contentType">application/download</param>
				<param name="inputName">inputStream</param>
				<param name="bufferSize">1024</param>
				<param name="contentDisposition">attachment;filename=${fileName}</param>
			</result>
		</action>

	</package>

	<package name="json" extends="struts" namespace="/json">
		<action name="JSONLine" class="JSONLineActionBean">
			<result type="json">
				<param name="excludeProperties">
					accessLinks,
					connectionLinks,
					containedStopAreas,
					containedStopPoints,
					facilities,
					parents,
					parentStopArea,
					routingConstraintLines,
					userNeeds,
					areaCentroid.containedInStopArea
                </param>
				<param name="root">
					stopPlaces
                </param>
			</result>
		</action>
		<action name="JSONConnectionLink" class="JSONConnectionLinkActionBean">
			<result type="json">
				<param name="excludeProperties">
					accessLinks,
					connectionLinks,
					containedStopAreas,
					containedStopPoints,
					facilities,
					parents,
					parentStopArea,
					routingConstraintLines,
					userNeeds,
					areaCentroid.containedInStopArea
                </param>
				<param name="root">
					stopPlaces
                </param>
			</result>
		</action>
		<action name="JSONStopPointOnRoute" class="JSONStopPointOnRouteActionBean">
			<result type="json">
				<param name="root">
					stopPoints
                </param>
			</result>
		</action>
		<action name="JSONBoardingPosition" class="JSONBoardingPositionActionBean">
			<result type="json">
				<param name="excludeProperties">
					accessLinks,
					connectionLinks,
					containedStopAreas,
					containedStopPoints,
					facilities,
					parents,
					parentStopArea,
					routingConstraintLines,
					userNeeds,
					areaCentroid.containedInStopArea
                </param>
				<param name="root">
					boardingPositions
                </param>
			</result>
		</action>
		<action name="JSONStopPlace" class="JSONStopPlaceActionBean">
			<result type="json">
				<param name="root">
					stopAreaChildrens
                </param>
			</result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle Network -->
	<package name="network" extends="struts" namespace="/network">
		<action name="*" method="{1}" class='NetworkActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="edit">/jsp/network/edit.jsp</result>
			<result name="list">/jsp/network/list.jsp</result>
			<result name="input">/jsp/network/edit.jsp</result>
			<result name="export" type="stream">
				<param name="contentType">text/xml; charset=ISO-8859-1</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment; filename="${nomFichier}"</param>
				<param name="contentTransferEncoding">binary</param>
				<param name="bufferSize">4096</param>
			</result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle Line -->
	<package name="line" extends="struts" namespace="/line">
		<action name="*" method="{1}" class='LineActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="edit">/jsp/line/edit.jsp</result>
			<result name="list">/jsp/line/list.jsp</result>
			<result name="input">/jsp/line/edit.jsp</result>
			<result name="export" type="stream">
				<param name="contentType">text/xml; charset=UTF-8</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment; filename="${nomFichier}"</param>
				<param name="contentTransferEncoding">binary</param>
				<param name="bufferSize">4096</param>
			</result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle Company -->
	<package name="company" extends="struts" namespace="/company">
		<action name="*" method="{1}" class='CompanyActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="edit">/jsp/company/edit.jsp</result>
			<result name="list">/jsp/company/list.jsp</result>
			<result name="input">/jsp/company/edit.jsp</result>
			<result name="export" type="stream">
				<param name="contentType">text/xml; charset=ISO-8859-1</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment; filename="${nomFichier}"</param>
				<param name="contentTransferEncoding">binary</param>
				<param name="bufferSize">4096</param>
			</result>
		</action>
	</package>


	<!-- Mise à jour des données du modèle Itineraires -->
	<package name="route" extends="struts" namespace="/route">
		<action name="*" method="{1}" class='RouteActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="idLigne">${idLigne}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="edit">/jsp/route/edit.jsp</result>
			<result name="list">/jsp/route/list.jsp</result>
			<result name="input">/jsp/route/edit.jsp</result>
			<result name="search">/jsp/route/search.jsp</result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle boardingPosition -->
	<package name="boardingPosition" extends="struts" namespace="/boardingPosition">
		<action name="*" method="{1}" class='StopAreaActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="redirectEdit" type="redirectAction">
				<param name="actionName">edit</param>
				<param name="operationMode">RETRIEVE</param>
				<param name="idPositionGeographique">${idPositionGeographique}</param>
			</result>
			<result name="edit">/jsp/boardingPosition/edit.jsp</result>
			<result name="list">/jsp/boardingPosition/list.jsp</result>
			<result name="input">/jsp/boardingPosition/edit.jsp</result>
			<result name="search">/jsp/boardingPosition/search.jsp</result>
			<result name="autocomplete">/jsp/boardingPosition/autocomplete.jsp</result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle stopPlace -->
	<package name="stopPlace" extends="struts" namespace="/stopPlace">
		<action name="*" method="{1}" class='StopAreaActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="redirectEdit" type="redirectAction">
				<param name="actionName">edit</param>
				<param name="operationMode">RETRIEVE</param>
				<param name="idPositionGeographique">${idPositionGeographique}</param>
			</result>
			<result name="edit">/jsp/stopPlace/edit.jsp
      </result>
			<result name="list">/jsp/stopPlace/list.jsp
      </result>
			<result name="input">/jsp/stopPlace/edit.jsp
      </result>
			<result name="search">/jsp/stopPlace/search.jsp
      </result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle routingConstraint -->
	<package name="routingConstraint" extends="struts" namespace="/routingConstraint">
		<action name="*" method="{1}" class='StopAreaActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="redirectEdit" type="redirectAction">
				<param name="actionName">edit</param>
				<param name="operationMode">RETRIEVE</param>
				<param name="idPositionGeographique">${idPositionGeographique}</param>
			</result>
			<result name="edit">/jsp/routingConstraint/edit.jsp
      </result>
			<result name="list">/jsp/routingConstraint/list.jsp
      </result>
			<result name="input">/jsp/routingConstraint/edit.jsp
      </result>
			<result name="search">/jsp/routingConstraint/search.jsp
      </result>
			<result name="searchLine">/jsp/routingConstraint/searchLine.jsp
      </result>
		</action>
	</package>


	<package name="connectionLink" extends="struts" namespace="/connectionLink">
		<action name="*" method="{1}" class='ConnectionLinkActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="redirectEdit" type="redirectAction">
				<param name="actionName">edit</param>
				<param name="operationMode">RETRIEVE</param>
				<param name="idCorrespondance">${idCorrespondance}</param>
			</result>
			<result name="edit">/jsp/connectionLink/edit.jsp
      </result>
			<result name="list">/jsp/connectionLink/list.jsp
      </result>
			<result name="input">/jsp/connectionLink/edit.jsp
      </result>
			<result name="search">/jsp/connectionLink/search.jsp
      </result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle timeTable -->
	<package name="timeTable" extends="struts" namespace="/timeTable">
		<action name="*" method="{1}" class='TimeTableActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="redirectEdit" type="redirectAction">
				<param name="actionName">edit</param>
				<param name="operationMode">RETRIEVE</param>
				<param name="idTableauMarche">${idTableauMarche}</param>
			</result>
			<result name="edit">/jsp/timeTable/edit.jsp
      </result>
			<result name="list">/jsp/timeTable/list.jsp
      </result>
			<result name="input">/jsp/timeTable/edit.jsp
      </result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle ArretSurItineraire -->
	<package name="stoppointOnRoute" extends="struts" namespace="/stoppointOnRoute">
		<action name="*" method="{1}" class='StoppointOnRouteActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="operationMode">RETRIEVE</param>
				<param name="idItineraire">${idItineraire}</param>
				<param name="idLigne">${idLigne}</param>
			</result>
			<result name="list">/jsp/stoppointOnRoute/list.jsp
      </result>
			<result name="input">/jsp/stoppointOnRoute/list.jsp
      </result>
		</action>
	</package>


	<!-- Mise à jour des données du modèle Horaires -->
	<package name="vehicleJourneyAtStop" extends="struts"
		namespace="/vehicleJourneyAtStop">
		<action name="*" method="{1}" class='VehicleJourneyAtStopActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">/vehicleJourneyAtStop</param>
				<param name="idItineraire">${idItineraire}</param>
				<param name="idLigne">${idLigne}</param>
				<param name="idTableauMarche">${idTableauMarche}</param>
				<param name="seuilHeureDepartCourse">${seuilHeureDepartCourse}</param>
				<param name="page">${page}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="list">/jsp/vehicleJourneyAtStop/list.jsp</result>
			<result name="input">/jsp/vehicleJourneyAtStop/list.jsp</result>
			<result name="search">/jsp/vehicleJourneyAtStop/search.jsp</result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle vehicleJourney -->
	<package name="vehicleJourney" extends="struts" namespace="/vehicleJourney">
		<action name="*" method="{1}" class='VehicleJourneyActionBean'>
			<result name="redirectEdit" type="redirectAction">
				<param name="actionName">edit</param>
				<param name="namespace">/vehicleJourney</param>
				<param name="idCourse">${idCourse}</param>
				<param name="idItineraire">${idItineraire}</param>
				<param name="idLigne">${idLigne}</param>
				<param name="idTableauMarche">${idTableauMarche}</param>
				<param name="seuilHeureDepartCourse">${seuilHeureDepartCourse}</param>
				<param name="page">${page}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">/vehicleJourneyAtStop</param>
				<param name="idItineraire">${idItineraire}</param>
				<param name="idLigne">${idLigne}</param>
				<param name="idTableauMarche">${idTableauMarche}</param>
				<param name="seuilHeureDepartCourse">${seuilHeureDepartCourse}</param>
				<param name="page">${page}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="edit">/jsp/vehicleJourney/edit.jsp
      </result>
			<result name="list">/jsp/vehicleJourney/list.jsp
      </result>
			<result name="input">/jsp/vehicleJourney/edit.jsp
      </result>
		</action>
	</package>

	<!-- Mise à jour des données du modèle journeyPattern -->
	<package name="journeyPattern" extends="struts" namespace="/journeyPattern">
		<action name="*" method="{1}" class='JourneyPatternActionBean'>
			<result name="redirectList" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">/vehicleJourneyAtStop</param>
				<param name="idItineraire">${idItineraire}</param>
				<param name="idLigne">${idLigne}</param>
				<param name="idTableauMarche">${idTableauMarche}</param>
				<param name="seuilHeureDepartCourse">${seuilHeureDepartCourse}</param>
				<param name="page">${page}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="edit">/jsp/journeyPattern/edit.jsp
      </result>
			<result name="list">/jsp/journeyPattern/list.jsp
      </result>
			<result name="input">/jsp/journeyPattern/edit.jsp
      </result>
		</action>
	</package>

	<!-- ***** SERVICES NON REST ***** -->

	<!-- Export des données -->
	<package name="export" extends="struts" namespace="/export">
		<action name="*" class="ExportActionBean" method="{1}">
			<result name="success" type="stream">
				<param name="contentType">text/xml; charset=ISO-8859-1</param>
				<param name="inputName">inputStream</param>
				<param name="contentDisposition">attachment; filename="${nomFichier}"</param>
				<param name="contentTransferEncoding">binary</param>
				<param name="bufferSize">4096</param>
			</result>
			<result name="input" type="chain">
				<param name="actionName">list</param>
				<param name="namespace">/${origin}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
		</action>
	</package>

	<!-- Import des données -->

	<package name="upload" extends="struts" namespace="/upload">
		<action name="*" class="ImportActionBean" method="{1}">
			<result name="success">/jsp/upload/import.jsp</result>
			<result name="input">/jsp/upload/import.jsp</result>
			<result name="success_itineraire" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">/route</param>
				<param name="idLigne">${idLigne}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
			<result name="input_itineraire" type="redirectAction">
				<param name="actionName">list</param>
				<param name="namespace">/route</param>
				<param name="idLigne">${idLigne}</param>
				<param name="operationMode">RETRIEVE</param>
			</result>
		</action>
	</package>



	<package name="neptuneValidation" extends="struts" namespace="/neptune-validation">
		<action name="Sheet*">
			<result>/jsp/neptune-validation/sheets/{1}.html</result>
		</action>
		<action name="*" class="NeptuneValidationAction" method="{1}">
			<result name="success">/jsp/neptune-validation/neptune-validation.jsp
			</result>
			<result name="input">/jsp/neptune-validation/list.jsp</result>
			<result name="error">/jsp/neptune-validation/neptune-validation.jsp
			</result>
			<result name="list">/jsp/neptune-validation/list.jsp</result>
		</action>
	</package>

</struts>
